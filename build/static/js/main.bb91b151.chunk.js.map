{"version":3,"sources":["RatesData.module.css","App.module.css","Rates.module.css","Spin.js","hooks/useForm.js","RatesData.js","RatesTiers.js","Rates.js","App.js","index.js","RatesTiers.module.css","Spin.module.css"],"names":["module","exports","Spin","className","styles","spinMainContext","dataBox","otherData","spinBtn","outcome","useForm","useState","formData","setFormData","e","value","target","RatesData","data","tiers","selectedTier","items","setItems","itemData","setItemData","handleItemChange","useEffect","tierItem","undefined","rightContainer","rightData","map","item","index","rightInputs","onSubmit","length","prevItems","preventDefault","type","name","onChange","placeholder","RatesTiers","setTiers","selectTier","removeTier","tierData","setTierData","handleTierChange","percentageData","setPercentageData","handlePercentageChange","changePercentage","updatedTiers","perSelected","ratesMainContext","mainContent","tierName","tierText","onClick","style","fontWeight","parseInt","id","tier","percentage","percent","isNaN","handlePercentageUpdate","autoFocus","removeIcon","tierForm","prevTiers","replace","tierPercentage","tierAdd","Rates","setSelectedTier","container","attributes","i","filter","App","currentPath","useLocation","pathname","nav","to","textDecoration","ratesBtn","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb91b151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightContainer\":\"RatesData_rightContainer__W_bTQ\",\"mainContent\":\"RatesData_mainContent__1G3OE\",\"rightData\":\"RatesData_rightData__2KuQz\",\"rightInputs\":\"RatesData_rightInputs__3mMUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__3TRKK\",\"spinBtn\":\"App_spinBtn__mTZZk\",\"ratesBtn\":\"App_ratesBtn__3Wbrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Rates_container__Lt2yP\"};","import React from 'react'\r\n\r\nimport styles from \"./Spin.module.css\"\r\n\r\nconst Spin = () => {\r\n    return (\r\n        <>\r\n            <div className={styles.spinMainContext}>\r\n                <div className={styles.dataBox}><span>RARITY</span></div>\r\n                <div className={styles.dataBox}><span>SERVICE_NAME</span></div>\r\n            </div>\r\n            <div className={styles.otherData}>\r\n                <button className={styles.spinBtn}>SPIN!</button>\r\n                <div className={styles.outcome}>\r\n                    The outcome is at x%!\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spin\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = () => {\r\n    const [formData, setFormData] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { value } = e.target;\r\n        setFormData(value);\r\n    }\r\n\r\n    return [formData, setFormData, handleChange];\r\n\r\n}\r\n\r\nexport default useForm;","import React, { useState, useEffect } from 'react';\r\nimport styles from './RatesData.module.css';\r\nimport useForm from './hooks/useForm';\r\n\r\nconst RatesData = ({ data: { tiers, selectedTier } }) => {\r\n    const [items, setItems] = useState([]);\r\n    const [itemData, setItemData, handleItemChange] = useForm('');\r\n\r\n    const itemAdd = (e) => {\r\n        if (itemData.length > 0) {\r\n            setItems(prevItems => ([\r\n                ...prevItems,\r\n                itemData\r\n            ]));\r\n        }\r\n        setItemData('');\r\n        e.preventDefault();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const tierItem = tiers[selectedTier];\r\n        if (tierItem !== undefined) {\r\n            setItems(tierItem.items)\r\n        }\r\n    }, [tiers, selectedTier])\r\n\r\n    return (\r\n        <div className={styles.rightContainer}>\r\n            <div className={styles.rightData}>\r\n                <ul className={styles.items}>\r\n                    {items.map((item, index) => <li key={index}>{item}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.rightInputs}>\r\n                <form onSubmit={itemAdd}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={itemData}\r\n                        name=\"item\"\r\n                        onChange={handleItemChange}\r\n                        placeholder=\"enter an item\"\r\n                    />\r\n                    <button>ADD</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesData;","import React from 'react'\r\n\r\nimport useForm from './hooks/useForm'\r\nimport styles from \"./RatesTiers.module.css\"\r\n\r\nconst RatesTiers = ({ data: { tiers, setTiers, selectedTier, selectTier, removeTier } }) => {\r\n\r\n    const [tierData, setTierData, handleTierChange] = useForm('');\r\n    const [percentageData, setPercentageData, handlePercentageChange] = useForm('');\r\n\r\n\r\n\r\n    const handleTierSubmit = (e) => {\r\n        if (tierData.length > 0 && percentageData.length > 0) {\r\n            setTiers(prevTiers => ([\r\n                ...prevTiers,\r\n                {\r\n                    tier: tierData,\r\n                    percent: percentageData.replace('%', ''),\r\n                    perSelected: false,\r\n                    items: []\r\n                }\r\n            ]));\r\n        }\r\n        setTierData('');\r\n        setPercentageData('');\r\n        e.preventDefault();\r\n    }\r\n\r\n    const changePercentage = (index) => {\r\n        const updatedTiers = [...tiers]\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            perSelected: !updatedTiers[index].perSelected\r\n        }\r\n\r\n        setTiers(updatedTiers)\r\n    }\r\n\r\n    const handlePercentageUpdate = ({ value }, index) => {\r\n        const updatedTiers = [...tiers]\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            percent: parseInt(value)\r\n        }\r\n        if (!isNaN(updatedTiers[index].percent)) { \r\n            setTiers(updatedTiers);\r\n        } else {\r\n            updatedTiers[index] = {\r\n                ...updatedTiers[index],\r\n                percent: 0\r\n            }\r\n            setTiers(updatedTiers);\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ratesMainContext}>\r\n\r\n            <div className={styles.mainContent}>\r\n\r\n                {tiers.map((tierData, index) => (\r\n                    <div key={index} className={styles.dataBox}>\r\n                        <span className={styles.tierName}>\r\n                            <span\r\n                                className={styles.tierText}\r\n                                onClick={selectTier}\r\n                                style={{ fontWeight: index === parseInt(selectedTier) ? \"bolder\" : \"normal\" }}\r\n                                id={index}\r\n                            >\r\n                                {tiers[index].tier}\r\n                            </span>\r\n                            <span className={styles.percentage}>\r\n                                <span onClick={() => changePercentage(index)}>\r\n                                    {tierData.perSelected ?\r\n                                        <form onSubmit={(e) => {\r\n                                            changePercentage(index);\r\n                                            e.preventDefault();\r\n                                        }}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={tierData.percent}\r\n                                                onChange={(e) => handlePercentageUpdate(e.target, index)}\r\n                                                autoFocus={true}\r\n                                            />\r\n                                        </form> :\r\n                                        tierData.percent}%\r\n                                </span>\r\n                                <span className={styles.removeIcon} onClick={() => removeTier(index)}>(X)</span>\r\n                            </span>\r\n\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n\r\n                <form className={styles.tierForm} onSubmit={handleTierSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"tier\"\r\n                        value={tierData}\r\n                        className={styles.tierItem}\r\n                        onChange={handleTierChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"%\"\r\n                        value={percentageData}\r\n                        className={styles.tierPercentage}\r\n                        onChange={handlePercentageChange}\r\n                    />\r\n                    <button className={styles.tierAdd}>ADD</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesTiers","import React, { useState } from 'react';\r\nimport styles from \"./Rates.module.css\";\r\n\r\nimport RatesData from \"./RatesData\";\r\nimport RatesTiers from \"./RatesTiers\";\r\n\r\nconst Rates = () => {\r\n    const [tiers, setTiers] = useState(\r\n        [\r\n            {\r\n                tier: \"TierName1\",\r\n                percent: 26,\r\n                perSelected: false,\r\n                items: [\r\n                    \"Tier1Item1\",\r\n                    \"Another Item\",\r\n                    \"lorem ispum\",\r\n                    \"example\"\r\n                ]\r\n            }, {\r\n                tier: \"TierName2\",\r\n                percent: 594,\r\n                perSelected: false,\r\n                items: [\r\n                    \"abcdefg\",\r\n                    \"tier2 item\",\r\n                    \"something\"\r\n                ]\r\n            }, {\r\n                tier: \"Another Example Tier\",\r\n                percent: 1,\r\n                perSelected: false,\r\n                items: [\r\n                    \"Tier3\",\r\n                    \"something else\",\r\n                    \"another example\",\r\n                    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\",\r\n                    \"ABC\"\r\n                ]\r\n            }\r\n        ]);\r\n\r\n    const [selectedTier, setSelectedTier] = useState(0);\r\n\r\n    const selectTier = (e) => {\r\n        setSelectedTier(e.target.attributes.id.value);\r\n    }\r\n\r\n    const removeTier = (i) => {\r\n        setTiers(tiers.filter(tier => tier !== tiers[i]))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <RatesTiers data={{ tiers, setTiers, selectedTier, selectTier, removeTier }} />\r\n            <RatesData data={{ tiers, selectedTier }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rates;\r\n","import React from 'react'\r\nimport { Link, Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Spin from \"./Spin\"\r\nimport Rates from \"./Rates\"\r\n\r\nimport styles from \"./App.module.css\"\r\n\r\nexport default function App() {\r\n    \r\n    const location = useLocation();\r\n    const currentPath = location.pathname;\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.nav}>\r\n                <Link to=\"/\">\r\n                    <button\r\n                        className={styles.spinBtn}\r\n                        style={{textDecoration: currentPath === \"/\" ? \"underline\" : \"none\"}}\r\n                    >\r\n                        Spin\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/rates\">\r\n                    <button\r\n                        className={styles.ratesBtn}\r\n                        style={{textDecoration: currentPath === \"/rates\" ? \"underline\" : \"none\"}}\r\n                    >\r\n                        Rates\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Spin />\r\n                </Route>\r\n                <Route exact path=\"/rates\">\r\n                    <Rates />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport App from \"./App\";\r\n// eslint-disable-next-line\r\nimport styles from \"./index.module.css\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesMainContext\":\"RatesTiers_ratesMainContext__3NadP\",\"mainContent\":\"RatesTiers_mainContent__3Dkq0\",\"dataBox\":\"RatesTiers_dataBox__19cii\",\"tierName\":\"RatesTiers_tierName__3av3W\",\"percentage\":\"RatesTiers_percentage__Ym_eK\",\"tierText\":\"RatesTiers_tierText__1zKYq\",\"tierForm\":\"RatesTiers_tierForm__3Fzt_\",\"tierPercentage\":\"RatesTiers_tierPercentage__2E43o\",\"tierAdd\":\"RatesTiers_tierAdd__1ipYI\",\"tierItem\":\"RatesTiers_tierItem__2-wmx\",\"removeIcon\":\"RatesTiers_removeIcon__3OWV8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinMainContext\":\"Spin_spinMainContext__1DUjz\",\"dataBox\":\"Spin_dataBox__1mqVw\",\"otherData\":\"Spin_otherData__1CSZG\",\"spinBtn\":\"Spin_spinBtn__2jig2\",\"outcome\":\"Spin_outcome__14xHn\"};"],"sourceRoot":""}