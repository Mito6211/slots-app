{"version":3,"sources":["RatesData.module.css","App.module.css","Rates.module.css","Spin.js","RatesData.js","hooks/useForm.js","RatesTiers.js","Rates.js","App.js","index.js","RatesTiers.module.css","Spin.module.css"],"names":["module","exports","Spin","data","totalPercentage","tiers","useState","tier","rarity","setRarity","item","setItem","thingSpinning","setThingSpinning","isSpinning","setIsSpinning","className","styles","spinMainContext","dataBox","spinner","otherData","spinBtn","onClick","allTiers","forEach","i","parseInt","percent","push","randomTier","Math","floor","random","length","setTimeout","n","items","timer","disabled","outcome","style","color","RatesData","setTiers","selectedTier","itemData","handleItemChange","setItemData","setItems","itemAdd","useEffect","tierItem","undefined","rightContainer","rightData","map","index","display","removeIcon","newItems","filter","updatedTiers","removeDataItem","rightInputs","onSubmit","type","value","name","onChange","placeholder","useForm","formData","setFormData","e","target","RatesTiers","selectTier","removeTier","tierData","setTierData","handleTierChange","percentageData","setPercentageData","handlePercentageChange","changePercentage","perSelected","ratesMainContext","upperData","padding","isNaN","removeAll","mainContent","tierName","tierText","fontWeight","id","percentage","preventDefault","keystroke","percentValue","handlePercentageUpdate","autoFocus","percentageUpdateInput","tierForm","prevTiers","replace","tierPercentage","tierAdd","Rates","setSelectedTier","container","selTier","attributes","prevItems","localStorage","JSON","stringify","App","currentPath","useLocation","pathname","parse","getItem","reduce","total","nav","to","textDecoration","ratesBtn","exact","path","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,YAAc,+BAA+B,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,gC,mBCArND,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,SAAW,wB,mBCAnFD,EAAOC,QAAU,CAAC,UAAY,2B,6ICoHfC,EAjHF,SAAC,GAA0C,IAAD,IAAvCC,KAAQC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,MAAc,EACvBC,mBAAS,CAAEC,KAAM,WADM,mBAC5CC,EAD4C,KACpCC,EADoC,OAE3BH,mBAAS,QAFkB,mBAE5CI,EAF4C,KAEtCC,EAFsC,OAITL,mBAAS,MAJA,mBAI5CM,EAJ4C,KAI7BC,EAJ6B,OAKfP,oBAAS,GALM,mBAK5CQ,EAL4C,KAKhCC,EALgC,KAoEnD,OACI,qCACI,sBAAKC,UAAWC,IAAOC,gBAAvB,UACI,qBAAKF,UAAWC,IAAOE,QAAvB,SACI,sBACIH,UACsB,WAAlBJ,EAA6BK,IAAOG,QAAU,GAFtD,SAKKZ,EAAOD,SAGhB,qBAAKS,UAAWC,IAAOE,QAAvB,SACI,sBACIH,UACsB,SAAlBJ,EAA2BK,IAAOG,QAAU,GAFpD,SAKKV,SAIb,sBAAKM,UAAWC,IAAOI,UAAvB,UACI,wBACIL,UAAWC,IAAOK,QAClBC,QAtFC,WACbR,GAAc,GAEd,IAAMS,EAAW,GACjBnB,EAAMoB,SAAQ,SAAClB,GACX,IAAK,IAAImB,EAAI,EAAGA,EAAIC,SAASpB,EAAKqB,SAAUF,IACxCF,EAASK,KAAKtB,MAItB,IAAMuB,EACFN,EAASO,KAAKC,MAAMD,KAAKE,SAAWT,EAASU,SAEjDrB,EAAiB,UAEjB,IAAK,IAAIa,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAEtBS,YAAW,WACP1B,EACIe,EAASO,KAAKC,MAAMD,KAAKE,SAAWT,EAASU,YAElD,IAGDR,GAENS,YAAW,WACP1B,EAAUqB,GACVjB,EAAiB,QAClB,MAKPsB,YAAW,WACPtB,EAAiB,QAEjB,IAAK,IAAIa,EAAI,EAAGA,GAAK,GAAIA,IAAK,EACZ,SAACU,GACXD,YAAW,WACPxB,EACImB,EAAWO,MACPN,KAAKC,MACDD,KAAKE,SAAWH,EAAWO,MAAMH,YAI9C,IAAME,GAGbE,CAAMZ,GAENS,YAAW,WACPtB,EAAiB,MACjBE,GAAc,KACf,QAGR,OA6BSwB,SAA8B,MAApBnC,GAA2BU,EAHzC,SAKI,sBAAME,UAAU,oCAAhB,qBAIJ,qBACIA,UAAWC,IAAOuB,QAClBC,MAAO,CAAEC,MAA2B,MAApBtC,EAA0B,QAAU,OAFxD,SAII,uBAAMY,UAAU,oCAAhB,+BACuBZ,EADvB,iB,gDCvCLuC,EAlEG,SAAC,GAYZ,IAAD,IAXFxC,KACIE,EAUF,EAVEA,MACAuC,EASF,EATEA,SACAC,EAQF,EAREA,aACAC,EAOF,EAPEA,SAEAC,GAKF,EANEC,YAMF,EALED,kBACAV,EAIF,EAJEA,MACAY,EAGF,EAHEA,SACAC,EAEF,EAFEA,QAIJC,qBAAU,WACN,IAAMC,EAAW/C,EAAMwC,QACNQ,IAAbD,GACAH,EAASG,EAASf,SAEvB,CAAChC,EAAOwC,EAAcI,IAczB,OACI,sBAAKjC,UAAWC,IAAOqC,eAAvB,UACI,qBAAKtC,UAAWC,IAAOsC,UAAvB,SACI,oBAAIvC,UAAWC,IAAOoB,MAAtB,SACKA,EAAMmB,KAAI,SAAC9C,EAAM+C,GAAP,OACP,qBAAgBhB,MAAO,CAAEiB,QAAS,QAAlC,UACI,sBACI1C,UAAWC,IAAO0C,WAClBpC,QAAS,kBApBd,SAACkC,GACpB,IAAMG,EAAWvB,EAAMwB,QAAO,SAACnD,GAAD,OAAU2B,EAAMoB,KAAW/C,KACzDuC,EAASW,GACT,IAAIE,EAAY,YAAOzD,GACvByD,EAAajB,GAAb,2BACOiB,EAAajB,IADpB,IAEIR,MAAOuB,IAEXhB,EAASkB,GAY8BC,CAAeN,IAFlC,iBAMC/C,IAPI+C,UAYrB,qBAAKzC,UAAWC,IAAO+C,YAAvB,SACI,uBAAMC,SAAUf,EAAhB,UACI,uBACIgB,KAAK,OACLC,MAAOrB,EACPsB,KAAK,OACLC,SAAUtB,EACVuB,YAAY,kBAEhB,kDChDLC,EAZC,WAAO,IAAD,EACcjE,mBAAS,IADvB,mBACXkE,EADW,KACDC,EADC,KAQlB,MAAO,CAACD,EAAUC,EALG,SAACC,GAAO,IACjBP,EAAUO,EAAEC,OAAZR,MACRM,EAAYN,M,gBC6HLS,EA/HI,SAAC,GAAoG,IAAD,IAAjGzE,KAAQE,EAAyF,EAAzFA,MAAOuC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,aAAcgC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,WAAY1E,EAAkC,EAAlCA,gBAAiB6C,EAAiB,EAAjBA,SAAiB,EAEjEsB,EAAQ,IAFyD,mBAE5GQ,EAF4G,KAElGC,EAFkG,KAErFC,EAFqF,OAG/CV,EAAQ,IAHuC,mBAG5GW,EAH4G,KAG5FC,EAH4F,KAGzEC,EAHyE,KAwB7GC,EAAmB,SAAC5B,GACtB,IAAMK,EAAY,YAAOzD,GACzByD,EAAaL,GAAb,2BACOK,EAAaL,IADpB,IAEI6B,aAAcxB,EAAaL,GAAO6B,cAGtC1C,EAASkB,IAyBb,OACI,sBAAK9C,UAAWC,IAAOsE,iBAAvB,UACI,sBAAKvE,UAAWC,IAAOuE,UAAvB,UACI,sBAAK/C,MAAO,CAAEC,MAA2B,MAApBtC,EAA0B,QAAU,MAAOqF,QAAS,QAAzE,oBACaC,MAAMtF,GAAqC,EAAlBA,EADtC,OAGA,qBAAKY,UAAWC,IAAO0E,UAAvB,SACI,sBAAMpE,QAZJ,WACdqB,EAAS,IACTK,EAAS,KAUG,+BAIR,sBAAKjC,UAAWC,IAAO2E,YAAvB,UAEKvF,EAAMmD,KAAI,SAACuB,EAAUtB,GAAX,OACP,qBAAiBzC,UAAWC,IAAOE,QAAnC,SACI,uBAAMH,UAAWC,IAAO4E,SAAxB,UACI,sBACI7E,UAAWC,IAAO6E,SAClBvE,QAASsD,EACTpC,MAAO,CAAEsD,WAAYtC,IAAU9B,SAASkB,GAAgB,SAAW,UACnEmD,GAAIvC,EAJR,SAMKpD,EAAMoD,GAAOlD,OAElB,uBAAMS,UAAWC,IAAOgF,WAAxB,UACI,uBAAM1E,QAAS,kBAAM8D,EAAiB5B,IAAtC,UACKsB,EAASO,YACN,sBAAMrB,SAAU,SAACS,GACbW,EAAiB5B,GACjBiB,EAAEwB,kBAFN,SAII,uBACIhC,KAAK,OACLC,MAAOY,EAASnD,QAChByC,SAAU,SAACK,GAAD,OAxDvB,SAAC,EAAWjB,GAAW,IAApBU,EAAmB,EAAnBA,MACxBL,EAAY,YAAOzD,GACnB8F,EAAYhC,EAAMA,EAAMjC,OAAS,GACnCkE,EAAgBV,MAAM/D,SAASwC,KAAyB,MAAdgC,EAAqB,GAAKhC,EAEtD,MAAdgC,GAAqBxE,SAAStB,EAAMoD,GAAO7B,SAAW,IAAM,IAC5DwE,EAAejC,GAGnBL,EAAaL,GAAb,2BACOK,EAAaL,IADpB,IAEI7B,QAASwE,IAGbxD,EAASkB,GA0CgDuC,CAAuB3B,EAAEC,OAAQlB,IAClD6C,WAAW,EACXtF,UAAWC,IAAOsF,0BAG1BxB,EAASnD,QAdjB,OAgBA,sBAAMZ,UAAWC,IAAO0C,WAAYpC,QAAS,kBAAMuD,EAAWrB,IAA9D,wBA3BFA,MAkCd,uBAAMzC,UAAWC,IAAOuF,SAAUvC,SAjGrB,SAACS,GAClBK,EAAS7C,OAAS,GAAKgD,EAAehD,OAAS,GAC/CU,GAAS,SAAA6D,GAAS,4BACXA,GADW,CAEd,CACIlG,KAAMwE,EACNnD,QAASsD,EAAewB,QAAQ,IAAK,IACrCpB,aAAa,EACbjD,MAAO,SAInB2C,EAAY,IACZG,EAAkB,IAClBT,EAAEwB,kBAmFM,UACI,uBACIhC,KAAK,OACLI,YAAY,OACZH,MAAOY,EACP/D,UAAWC,IAAOmC,SAClBiB,SAAUY,IAEd,uBACIf,KAAK,OACLI,YAAY,IACZH,MAAOe,EACPlE,UAAWC,IAAO0F,eAClBtC,SAAUe,IAEd,wBAAQpE,UAAWC,IAAO2F,QAA1B,2BCrDLC,EA/DD,SAAC,GAAoD,IAAD,IAAjD1G,KAAQC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,MAAOuC,EAAiB,EAAjBA,SAAiB,EACtBtC,mBAAS,GADa,mBACvDuC,EADuD,KACzCiE,EADyC,OAGZvC,EAAQ,IAHI,mBAGvDzB,EAHuD,KAG7CE,EAH6C,KAGhCD,EAHgC,OAIpCzC,mBAAS,IAJ2B,mBAIvD+B,EAJuD,KAIhDY,EAJgD,KAiC9D,OACI,sBAAKjC,UAAWC,IAAO8F,UAAvB,UACI,cAAC,EAAD,CACI5G,KAAM,CACFE,QACAuC,WACAC,eACAgC,WAhBG,SAACH,GAChB,IAAMsC,EAAUtC,EAAEC,OAAOsC,WAAWjB,GAAG7B,MACvC2C,EAAgBE,IAeJlC,WAZG,SAACpD,GAChBkB,EAASvC,EAAMwD,QAAO,SAACtD,GAAD,OAAUA,IAASF,EAAMqB,QAYnCtB,kBACA6C,cAGR,cAAC,EAAD,CACI9C,KAAM,CACFE,QACAuC,WACAC,eACAC,WACAE,cACAD,mBACAV,QACAY,WACAC,QAlDA,SAACwB,GACT5B,EAASZ,OAAS,GAClBe,GAAS,SAACiE,GAAD,4BAAmBA,GAAnB,CAA8BpE,OAE3CE,EAAY,IAEZ,IAAMc,EAAY,YAAOzD,GACzByD,EAAajB,GAAb,2BACOiB,EAAajB,IADpB,IAEIR,MAAM,GAAD,mBAAMyB,EAAajB,GAAcR,OAAjC,CAAwCS,MAEjDF,EAASkB,GACTqD,aAAaxG,QAAQ,QAASyG,KAAKC,UAAUvD,IAG7CY,EAAEwB,yB,iBCrBK,SAASoB,IAEpB,IACMC,EADWC,cACYC,SAHH,EAOAnH,mBACtB8G,KAAKM,MAAMP,aAAaQ,QAAQ,WAAa,CACzC,CACIpH,KAAM,iBACNqB,QAAS,KACT0D,aAAa,EACbjD,MAAO,CACH,mCACA,kBACA,cACA,YAEL,CACC9B,KAAM,OACNqB,QAAS,KACT0D,aAAa,EACbjD,MAAO,CACH,8BACA,YACA,0BAEL,CACC9B,KAAM,aACNqB,QAAS,IACT0D,aAAa,EACbjD,MAAO,CACH,kBACA,gBACA,mBACA,yBApCU,mBAOnBhC,EAPmB,KAOZuC,EAPY,KA0CpBxC,EAAkBC,EAAMuH,QAAO,SAACC,EAAOnH,GAAR,OAAiBmH,EAAQlG,SAASjB,EAAKkB,WAAU,GAQtF,OALAuB,qBAAU,WACNgE,aAAaxG,QAAQ,QAASyG,KAAKC,UAAUhH,MAC9C,CAACA,IAIA,gCACI,sBAAKW,UAAWC,IAAO6G,IAAvB,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,wBACI/G,UAAWC,IAAOK,QAClBmB,MAAO,CAAEuF,eAAgC,MAAhBT,EAAsB,YAAc,QAFjE,oBAOJ,cAAC,IAAD,CAAMQ,GAAG,SAAT,SACI,wBACI/G,UAAWC,IAAOgH,SAClBxF,MAAO,CAAEuF,eAAgC,WAAhBT,EAA2B,YAAc,QAFtE,wBASR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMhI,KAAM,CAAEC,kBAAiBC,aAEnC,cAAC,IAAD,CAAO6H,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,CAAOhI,KAAM,CAAEC,kBAAiBC,QAAOuC,sB,MC7E3DwF,IAASC,OACL,cAAC,IAAD,UACI,cAACf,EAAD,MAEJgB,SAASC,eAAe,U,kBCV5BvI,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,YAAc,gCAAgC,QAAU,4BAA4B,SAAW,6BAA6B,WAAa,+BAA+B,SAAW,6BAA6B,SAAW,6BAA6B,eAAiB,mCAAmC,QAAU,4BAA4B,SAAW,6BAA6B,WAAa,+BAA+B,sBAAwB,0CAA0C,UAAY,8BAA8B,UAAY,gC,kBCAxmBD,EAAOC,QAAU,CAAC,gBAAkB,8BAA8B,QAAU,sBAAsB,UAAY,wBAAwB,QAAU,sBAAsB,QAAU,sBAAsB,QAAU,sBAAsB,SAAW,0B","file":"static/js/main.d2b8b7a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightContainer\":\"RatesData_rightContainer__W_bTQ\",\"mainContent\":\"RatesData_mainContent__1G3OE\",\"rightData\":\"RatesData_rightData__2KuQz\",\"rightInputs\":\"RatesData_rightInputs__3mMUF\",\"removeIcon\":\"RatesData_removeIcon__2eCNz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__3TRKK\",\"spinBtn\":\"App_spinBtn__mTZZk\",\"ratesBtn\":\"App_ratesBtn__3Wbrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Rates_container__Lt2yP\"};","import React, { useState } from \"react\";\r\nimport \"animate.css\";\r\nimport styles from \"./Spin.module.css\";\r\n\r\nconst Spin = ({ data: { totalPercentage, tiers } }) => {\r\n    const [rarity, setRarity] = useState({ tier: \"RARITY\" });\r\n    const [item, setItem] = useState(\"ITEM\");\r\n\r\n    const [thingSpinning, setThingSpinning] = useState(null);\r\n    const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n    const pickItem = () => {\r\n        setIsSpinning(true);\r\n        \r\n        const allTiers = [];\r\n        tiers.forEach((tier) => {\r\n            for (let i = 0; i < parseInt(tier.percent); i++) {\r\n                allTiers.push(tier);\r\n            }\r\n        });\r\n        \r\n        const randomTier =\r\n            allTiers[Math.floor(Math.random() * allTiers.length)];\r\n        \r\n        setThingSpinning(\"rarity\");\r\n\r\n        for (let i = 1; i <= 10; i++) {\r\n            const timer = (n) => {\r\n                setTimeout(() => {\r\n                    setRarity(\r\n                        allTiers[Math.floor(Math.random() * allTiers.length)]\r\n                    );\r\n                }, 200 * n);\r\n            };\r\n\r\n            timer(i);\r\n\r\n            setTimeout(() => {\r\n                setRarity(randomTier);\r\n                setThingSpinning(null);\r\n            }, 2005);\r\n        }\r\n\r\n\r\n\r\n        setTimeout(() => {\r\n            setThingSpinning(\"item\");\r\n\r\n            for (let i = 1; i <= 10; i++) {\r\n                const timer = (n) => {\r\n                    setTimeout(() => {\r\n                        setItem(\r\n                            randomTier.items[\r\n                                Math.floor(\r\n                                    Math.random() * randomTier.items.length\r\n                                )\r\n                            ]\r\n                        );\r\n                    }, 200 * n);\r\n                };\r\n\r\n                timer(i);\r\n\r\n                setTimeout(() => {\r\n                    setThingSpinning(null);\r\n                    setIsSpinning(false);\r\n                }, 2000);\r\n            }\r\n\r\n        }, 2100);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.spinMainContext}>\r\n                <div className={styles.dataBox}>\r\n                    <span\r\n                        className={\r\n                            thingSpinning === \"rarity\" ? styles.spinner : \"\"\r\n                        }\r\n                    >\r\n                        {rarity.tier}\r\n                    </span>\r\n                </div>\r\n                <div className={styles.dataBox}>\r\n                    <span\r\n                        className={\r\n                            thingSpinning === \"item\" ? styles.spinner : \"\"\r\n                        }\r\n                    >\r\n                        {item}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.otherData}>\r\n                <button\r\n                    className={styles.spinBtn}\r\n                    onClick={pickItem}\r\n                    disabled={totalPercentage !== 100 || isSpinning}\r\n                >\r\n                    <span className=\"animate__animated animate__zoomIn\">\r\n                        SPIN!\r\n                    </span>\r\n                </button>\r\n                <div\r\n                    className={styles.outcome}\r\n                    style={{ color: totalPercentage === 100 ? \"green\" : \"red\" }}\r\n                >\r\n                    <span className=\"animate__animated animate__zoomIn\">\r\n                        The outcome is at {totalPercentage}%!\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Spin;\r\n","import React, { useEffect } from \"react\";\r\nimport styles from \"./RatesData.module.css\";\r\n\r\nconst RatesData = ({\r\n    data: {\r\n        tiers,\r\n        setTiers,\r\n        selectedTier,\r\n        itemData,\r\n        setItemData,\r\n        handleItemChange,\r\n        items,\r\n        setItems,\r\n        itemAdd,\r\n    },\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const tierItem = tiers[selectedTier];\r\n        if (tierItem !== undefined) {\r\n            setItems(tierItem.items);\r\n        }\r\n    }, [tiers, selectedTier, setItems]);\r\n\r\n    const removeDataItem = (index) => {\r\n        const newItems = items.filter((item) => items[index] !== item)\r\n        setItems(newItems);\r\n        let updatedTiers = [...tiers];\r\n        updatedTiers[selectedTier] = {\r\n            ...updatedTiers[selectedTier],\r\n            items: newItems,\r\n        };\r\n        setTiers(updatedTiers)\r\n        // localStorage.setItem(\"tiers\", JSON.stringify(updatedTiers));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.rightContainer}>\r\n            <div className={styles.rightData}>\r\n                <ul className={styles.items}>\r\n                    {items.map((item, index) => (\r\n                        <li key={index} style={{ display: \"flex\" }}>\r\n                            <span\r\n                                className={styles.removeIcon}\r\n                                onClick={() => removeDataItem(index)}\r\n                            >\r\n                                (X)\r\n                            </span>\r\n                            {item}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.rightInputs}>\r\n                <form onSubmit={itemAdd}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={itemData}\r\n                        name=\"item\"\r\n                        onChange={handleItemChange}\r\n                        placeholder=\"enter an item\"\r\n                    />\r\n                    <button>ADD</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RatesData;\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = () => {\r\n    const [formData, setFormData] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { value } = e.target;\r\n        setFormData(value);\r\n    }\r\n\r\n    return [formData, setFormData, handleChange];\r\n\r\n}\r\n\r\nexport default useForm;","import React from 'react'\r\n\r\nimport useForm from './hooks/useForm'\r\nimport styles from \"./RatesTiers.module.css\"\r\n\r\nconst RatesTiers = ({ data: { tiers, setTiers, selectedTier, selectTier, removeTier, totalPercentage, setItems } }) => {\r\n\r\n    const [tierData, setTierData, handleTierChange] = useForm('');\r\n    const [percentageData, setPercentageData, handlePercentageChange] = useForm('');\r\n\r\n\r\n\r\n    const handleTierSubmit = (e) => {\r\n        if (tierData.length > 0 && percentageData.length > 0) {\r\n            setTiers(prevTiers => ([\r\n                ...prevTiers,\r\n                {\r\n                    tier: tierData,\r\n                    percent: percentageData.replace('%', ''),\r\n                    perSelected: false,\r\n                    items: []\r\n                }\r\n            ]));\r\n        }\r\n        setTierData('');\r\n        setPercentageData('');\r\n        e.preventDefault();\r\n    }\r\n\r\n    const changePercentage = (index) => {\r\n        const updatedTiers = [...tiers]\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            perSelected: !updatedTiers[index].perSelected\r\n        }\r\n\r\n        setTiers(updatedTiers)\r\n    }\r\n\r\n    const handlePercentageUpdate = ({ value }, index) => {\r\n        const updatedTiers = [...tiers];\r\n        const keystroke = value[value.length - 1];\r\n        let percentValue = (isNaN(parseInt(value)) && keystroke !== '.') ? \"\" : value;\r\n\r\n        if (keystroke === '.' && parseInt(tiers[index].percent) % 1 !== 0) {\r\n            percentValue = value;\r\n        }\r\n\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            percent: percentValue\r\n        }\r\n\r\n        setTiers(updatedTiers);\r\n    }\r\n\r\n    const removeAll = () => {\r\n        setTiers([]);\r\n        setItems([]);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ratesMainContext}>\r\n            <div className={styles.upperData}>\r\n                <div style={{ color: totalPercentage === 100 ? \"green\" : \"red\", padding: \"10px\" }}>\r\n                    Total: {!isNaN(totalPercentage) ? totalPercentage : 0}%\r\n                </div>\r\n                <div className={styles.removeAll}>\r\n                    <span onClick={removeAll}>(Remove All)</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.mainContent}>\r\n\r\n                {tiers.map((tierData, index) => (\r\n                    <div key={index} className={styles.dataBox}>\r\n                        <span className={styles.tierName}>\r\n                            <span\r\n                                className={styles.tierText}\r\n                                onClick={selectTier}\r\n                                style={{ fontWeight: index === parseInt(selectedTier) ? \"bolder\" : \"normal\" }}\r\n                                id={index}\r\n                            >\r\n                                {tiers[index].tier}\r\n                            </span>\r\n                            <span className={styles.percentage}>\r\n                                <span onClick={() => changePercentage(index)}>\r\n                                    {tierData.perSelected ?\r\n                                        <form onSubmit={(e) => {\r\n                                            changePercentage(index);\r\n                                            e.preventDefault();\r\n                                        }}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={tierData.percent}\r\n                                                onChange={(e) => handlePercentageUpdate(e.target, index)}\r\n                                                autoFocus={true}\r\n                                                className={styles.percentageUpdateInput}\r\n                                            />\r\n                                        </form> :\r\n                                        tierData.percent}%\r\n                                </span>\r\n                                <span className={styles.removeIcon} onClick={() => removeTier(index)}>(X)</span>\r\n                            </span>\r\n\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n\r\n                <form className={styles.tierForm} onSubmit={handleTierSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"tier\"\r\n                        value={tierData}\r\n                        className={styles.tierItem}\r\n                        onChange={handleTierChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"%\"\r\n                        value={percentageData}\r\n                        className={styles.tierPercentage}\r\n                        onChange={handlePercentageChange}\r\n                    />\r\n                    <button className={styles.tierAdd}>ADD</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesTiers","import React, { useState } from \"react\";\r\nimport styles from \"./Rates.module.css\";\r\n\r\nimport RatesData from \"./RatesData\";\r\nimport RatesTiers from \"./RatesTiers\";\r\n\r\nimport useForm from \"./hooks/useForm\";\r\n\r\nconst Rates = ({ data: { totalPercentage, tiers, setTiers } }) => {\r\n    const [selectedTier, setSelectedTier] = useState(0);\r\n\r\n    const [itemData, setItemData, handleItemChange] = useForm(\"\");\r\n    const [items, setItems] = useState([]);\r\n\r\n    const itemAdd = (e) => {\r\n        if (itemData.length > 0) {\r\n            setItems((prevItems) => [...prevItems, itemData]);\r\n        }\r\n        setItemData(\"\");\r\n\r\n        const updatedTiers = [...tiers];\r\n        updatedTiers[selectedTier] = {\r\n            ...updatedTiers[selectedTier],\r\n            items: [...updatedTiers[selectedTier].items, itemData],\r\n        };\r\n        setTiers(updatedTiers);\r\n        localStorage.setItem(\"tiers\", JSON.stringify(updatedTiers));\r\n        // console.log(JSON.parse(localStorage.getItem(\"tiers\")))\r\n\r\n        e.preventDefault();\r\n    };\r\n\r\n    const selectTier = (e) => {\r\n        const selTier = e.target.attributes.id.value;\r\n        setSelectedTier(selTier);\r\n    };\r\n\r\n    const removeTier = (i) => {\r\n        setTiers(tiers.filter((tier) => tier !== tiers[i]));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <RatesTiers\r\n                data={{\r\n                    tiers,\r\n                    setTiers,\r\n                    selectedTier,\r\n                    selectTier,\r\n                    removeTier,\r\n                    totalPercentage,\r\n                    setItems\r\n                }}\r\n            />\r\n            <RatesData\r\n                data={{\r\n                    tiers,\r\n                    setTiers,\r\n                    selectedTier,\r\n                    itemData,\r\n                    setItemData,\r\n                    handleItemChange,\r\n                    items,\r\n                    setItems,\r\n                    itemAdd,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rates;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Spin from \"./Spin\"\r\nimport Rates from \"./Rates\"\r\n\r\nimport styles from \"./App.module.css\"\r\n\r\nexport default function App() {\r\n\r\n    const location = useLocation();\r\n    const currentPath = location.pathname;\r\n\r\n\r\n\r\n    const [tiers, setTiers] = useState(\r\n        JSON.parse(localStorage.getItem(\"tiers\")) || [\r\n            {\r\n                tier: \"Smaller Prizes\",\r\n                percent: \"80\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"1 month of Discord Nitro Classic\",\r\n                    \"common item #82\",\r\n                    \"lorem ispum\",\r\n                    \"example\"\r\n                ]\r\n            }, {\r\n                tier: \"Rare\",\r\n                percent: \"15\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"3 months of Spotify Premium\",\r\n                    \"rare item\",\r\n                    \"something that's rare\"\r\n                ]\r\n            }, {\r\n                tier: \"Gift Cards\",\r\n                percent: \"5\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"$50 Amazon Card\",\r\n                    \"$40 Visa Card\",\r\n                    \"$60 Steam Credit\",\r\n                    \"$25 Starbucks Card\"\r\n                ]\r\n            }\r\n        ]);\r\n\r\n\r\n    const totalPercentage = tiers.reduce((total, item) => total + parseInt(item.percent), 0)\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tiers\", JSON.stringify(tiers));\r\n    }, [tiers])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.nav}>\r\n                <Link to=\"/\">\r\n                    <button\r\n                        className={styles.spinBtn}\r\n                        style={{ textDecoration: currentPath === \"/\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Spin\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/rates\">\r\n                    <button\r\n                        className={styles.ratesBtn}\r\n                        style={{ textDecoration: currentPath === \"/rates\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Rates\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Spin data={{ totalPercentage, tiers }} />\r\n                </Route>\r\n                <Route exact path=\"/rates\">\r\n                    <Rates data={{ totalPercentage, tiers, setTiers }} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport App from \"./App\";\r\nimport \"./index.module.css\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesMainContext\":\"RatesTiers_ratesMainContext__3NadP\",\"mainContent\":\"RatesTiers_mainContent__3Dkq0\",\"dataBox\":\"RatesTiers_dataBox__19cii\",\"tierName\":\"RatesTiers_tierName__3av3W\",\"percentage\":\"RatesTiers_percentage__Ym_eK\",\"tierText\":\"RatesTiers_tierText__1zKYq\",\"tierForm\":\"RatesTiers_tierForm__3Fzt_\",\"tierPercentage\":\"RatesTiers_tierPercentage__2E43o\",\"tierAdd\":\"RatesTiers_tierAdd__1ipYI\",\"tierItem\":\"RatesTiers_tierItem__2-wmx\",\"removeIcon\":\"RatesTiers_removeIcon__3OWV8\",\"percentageUpdateInput\":\"RatesTiers_percentageUpdateInput__17B0z\",\"upperData\":\"RatesTiers_upperData__3XruM\",\"removeAll\":\"RatesTiers_removeAll__2rOHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinMainContext\":\"Spin_spinMainContext__1DUjz\",\"dataBox\":\"Spin_dataBox__1mqVw\",\"otherData\":\"Spin_otherData__1CSZG\",\"spinBtn\":\"Spin_spinBtn__2jig2\",\"outcome\":\"Spin_outcome__14xHn\",\"spinner\":\"Spin_spinner__3yJlH\",\"spinText\":\"Spin_spinText__3zQU1\"};"],"sourceRoot":""}