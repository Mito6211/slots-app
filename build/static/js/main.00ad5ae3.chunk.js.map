{"version":3,"sources":["RatesTiers.module.css","App.module.css","Rates.module.css","Spin.js","RatesData.js","RatesTiersTop.js","RatesTiersCards.js","RatesTiersForm.js","RatesTiers.js","hooks/useForm.js","Rates.js","App.js","index.js","Spin.module.css","RatesData.module.css"],"names":["module","exports","Spin","data","totalPercentage","tiers","useState","tier","rarity","setRarity","item","setItem","thingSpinning","setThingSpinning","isSpinning","setIsSpinning","className","styles","spinMainContext","dataBox","spinner","otherData","spinBtn","onClick","allTiers","forEach","i","parseInt","percent","replace","push","randomTier","Math","floor","random","length","raritySpinnerCount","raritySpinnerID","setInterval","clearInterval","setTimeout","itemSpinnerCount","itemSpinnerID","items","disabled","outcome","style","color","RatesData","setTiers","selectedTier","itemData","handleItemChange","setItemData","setItems","itemAdd","useEffect","tierItem","undefined","rightContainer","rightData","map","index","display","removeIcon","newItems","filter","updatedTiers","removeDataItem","rightInputs","onSubmit","type","value","name","onChange","placeholder","RatesTiersTop","upperData","padding","isNaN","reset","localStorage","clear","window","location","reload","removeAll","RatesTiersCards","selectTier","removeTier","changePercentage","perSelected","tierData","tierName","tierText","fontWeight","id","percentage","e","preventDefault","percentageValue","handlePercentageUpdate","target","autoFocus","percentageUpdateInput","RatesTiersForm","state","setState","handleChange","numRegex","tierForm","percentageData","test","prevTiers","tierPercentage","tierAdd","RatesTiers","RegExp","ratesMainContext","mainContent","prevState","useForm","formData","setFormData","Rates","setSelectedTier","container","selTier","attributes","prevItems","JSON","stringify","App","currentPath","useLocation","pathname","parse","getItem","tPFloat","reduce","total","parseFloat","toFixed","newTiers","nav","to","textDecoration","ratesBtn","exact","path","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,iBAAmB,qCAAqC,YAAc,gCAAgC,QAAU,4BAA4B,SAAW,6BAA6B,WAAa,+BAA+B,SAAW,6BAA6B,SAAW,6BAA6B,eAAiB,mCAAmC,QAAU,4BAA4B,SAAW,6BAA6B,WAAa,+BAA+B,sBAAwB,0CAA0C,UAAY,8BAA8B,UAAY,8BAA8B,MAAQ,4B,mBCA9oBD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,SAAW,wB,mBCAnFD,EAAOC,QAAU,CAAC,UAAY,2B,oJC6GfC,EA1GF,SAAC,GAA0C,IAAD,IAAvCC,KAAQC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,MAAc,EACvBC,mBAAS,CAAEC,KAAM,WADM,mBAC5CC,EAD4C,KACpCC,EADoC,OAE3BH,mBAAS,QAFkB,mBAE5CI,EAF4C,KAEtCC,EAFsC,OAITL,mBAAS,MAJA,mBAI5CM,EAJ4C,KAI7BC,EAJ6B,OAKfP,oBAAS,GALM,mBAK5CQ,EAL4C,KAKhCC,EALgC,KA2DnD,OACI,qCACI,sBAAKC,UAAWC,IAAOC,gBAAvB,UACI,qBAAKF,UAAWC,IAAOE,QAAvB,SACI,sBACIH,UACsB,WAAlBJ,EAA6BK,IAAOG,QAAU,GAFtD,SAKKZ,EAAOD,SAGhB,qBAAKS,UAAWC,IAAOE,QAAvB,SACI,sBACIH,UACsB,SAAlBJ,EAA2BK,IAAOG,QAAU,GAFpD,SAKKV,SAIb,sBAAKM,UAAWC,IAAOI,UAAvB,UACI,wBACIL,UAAWC,IAAOK,QAClBC,QA7EC,WACbR,GAAc,GAEd,IAAMS,EAAW,GACjBnB,EAAMoB,SAAQ,SAAClB,GAEX,IAAK,IAAImB,EAAI,EAAGA,EAAIC,SAA0C,GAAjCpB,EAAKqB,QAAQC,QAAQ,IAAK,MAAYH,IAC/DF,EAASM,KAAKvB,MAItB,IAAMwB,EACFP,EAASQ,KAAKC,MAAMD,KAAKE,SAAWV,EAASW,SAEjDtB,EAAiB,UAEjB,IAAIuB,EAAqB,EACnBC,EAAkBC,aAAY,WAC5BF,GAAsB,GACtB3B,EAAUsB,GACVlB,EAAiB,MACjB0B,cAAcF,KAEd5B,EACIe,EAASQ,KAAKC,MAAMD,KAAKE,SAAWV,EAASW,UAEjDC,OAEL,KAEHI,YAAW,WACP3B,EAAiB,QAEjB,IAAI4B,EAAmB,EACjBC,EAAgBJ,aAAY,WAC1BG,GAAoB,GACpB5B,EAAiB,MACjBE,GAAc,GACdwB,cAAcG,KAEd/B,EACIoB,EAAWY,MACXX,KAAKC,MAAMD,KAAKE,SAAWH,EAAWY,MAAMR,UAGhDM,OAEL,OACJ,MA8BSG,SAA+B,QAApBxC,GAAiD,WAApBA,GAAiCU,EAH7E,SAKI,sBAAME,UAAU,oCAAhB,qBAIJ,qBACIA,UAAWC,IAAO4B,QAClBC,MAAO,CACHC,MAA4B,QAApB3C,GAAiD,WAApBA,EAAgC,QAAU,OAHvF,SAMI,uBAAMY,UAAU,oCAAhB,+BACuBZ,EADvB,iB,wCChCL4C,EAlEG,SAAC,GAYZ,IAAD,IAXF7C,KACIE,EAUF,EAVEA,MACA4C,EASF,EATEA,SACAC,EAQF,EAREA,aACAC,EAOF,EAPEA,SAEAC,GAKF,EANEC,YAMF,EALED,kBACAT,EAIF,EAJEA,MACAW,EAGF,EAHEA,SACAC,EAEF,EAFEA,QAIJC,qBAAU,WACN,IAAMC,EAAWpD,EAAM6C,QACNQ,IAAbD,GACAH,EAASG,EAASd,SAEvB,CAACtC,EAAO6C,EAAcI,IAczB,OACI,sBAAKtC,UAAWC,IAAO0C,eAAvB,UACI,qBAAK3C,UAAWC,IAAO2C,UAAvB,SACI,oBAAI5C,UAAWC,IAAO0B,MAAtB,SACKA,EAAMkB,KAAI,SAACnD,EAAMoD,GAAP,OACP,qBAAgBhB,MAAO,CAAEiB,QAAS,QAAlC,UACI,sBACI/C,UAAWC,IAAO+C,WAClBzC,QAAS,kBApBd,SAACuC,GACpB,IAAMG,EAAWtB,EAAMuB,QAAO,SAACxD,GAAD,OAAUiC,EAAMmB,KAAWpD,KACzD4C,EAASW,GACT,IAAIE,EAAY,YAAO9D,GACvB8D,EAAajB,GAAb,2BACOiB,EAAajB,IADpB,IAEIP,MAAOsB,IAEXhB,EAASkB,GAY8BC,CAAeN,IAFlC,iBAMCpD,IAPIoD,UAYrB,qBAAK9C,UAAWC,IAAOoD,YAAvB,SACI,uBAAMC,SAAUf,EAAhB,UACI,uBACIgB,KAAK,OACLC,MAAOrB,EACPsB,KAAK,OACLC,SAAUtB,EACVuB,YAAY,kBAEhB,kD,yBCjCLC,MA3Bf,YAAmF,IAAD,IAAzDzE,KAAQc,EAAiD,EAAjDA,OAAQb,EAAyC,EAAzCA,gBAAiB6C,EAAwB,EAAxBA,SAAUK,EAAc,EAAdA,SAYhE,OACI,sBAAKtC,UAAWC,EAAO4D,UAAvB,UACI,sBAAK/B,MAAO,CAAEC,MAA4B,QAApB3C,GAAiD,WAApBA,EAAgC,QAAU,MAAO0E,QAAS,QAA7G,oBACaC,MAAM3E,GAAqC,EAAlBA,EADtC,OAGA,qBAAKY,UAAWC,EAAO+D,MAAvB,SACI,sBAAMzD,QAXJ,WACV0D,aAAaC,QACbC,OAAOC,SAASC,UASR,uBAEJ,qBAAKrE,UAAWC,EAAOqE,UAAvB,SACI,sBAAM/D,QAnBA,WACd0B,EAAS,IACTK,EAAS,KAiBD,gCC2CDiC,MAhEf,YAAuG,IAAD,IAA3EpF,KAAQE,EAAmE,EAAnEA,MAAOY,EAA4D,EAA5DA,OAAQuE,EAAoD,EAApDA,WAAYtC,EAAwC,EAAxCA,aAAcuC,EAA0B,EAA1BA,WAAYxC,EAAc,EAAdA,SAc9EyC,EAAmB,SAAC5B,GACtB,IAAMK,EAAY,YAAO9D,GACzB8D,EAAaL,GAAb,2BACOK,EAAaL,IADpB,IAEI6B,aAAcxB,EAAaL,GAAO6B,cAGtC1C,EAASkB,IAGb,OACI,mCACK9D,EAAMwD,KAAI,SAAC+B,EAAU9B,GAAX,OACP,qBAAiB9C,UAAWC,EAAOE,QAAnC,SACI,uBAAMH,UAAWC,EAAO4E,SAAxB,UACI,sBACI7E,UAAWC,EAAO6E,SAClBvE,QAASiE,EACT1C,MAAO,CAAEiD,WAAYjC,IAAUnC,SAASuB,GAAgB,SAAW,UACnE8C,GAAIlC,EAJR,SAMKzD,EAAMyD,GAAOvD,OAElB,uBAAMS,UAAWC,EAAOgF,WAAxB,UACI,uBAAM1E,QAAS,kBAAMmE,EAAiB5B,IAAtC,UACK8B,EAASD,YACN,sBAAMrB,SAAU,SAAC4B,GACbR,EAAiB5B,GACjBoC,EAAEC,kBAFN,SAII,uBACI5B,KAAK,OACLC,MAAOoB,EAAShE,QAChB8C,SAAU,SAACwB,GAAD,OA7CnB,SAAC,EAAWpC,GAAW,IAApBU,EAAmB,EAAnBA,MACxBL,EAAY,YAAO9D,GACrB+F,EAAkB5B,EAEtBL,EAAaL,GAAb,2BACOK,EAAaL,IADpB,IAEIlC,QAASwE,EAAgBvE,QAAQ,IAAK,OAG1CoB,EAASkB,GAoC4CkC,CAAuBH,EAAEI,OAAQxC,IAClDyC,WAAW,EACXvF,UAAWC,EAAOuF,0BAG1BZ,EAAShE,QAdjB,OAgBA,sBAAMZ,UAAWC,EAAO+C,WAAYzC,QAAS,kBAAMkE,EAAW3B,IAA9D,wBA3BFA,SCkBX2C,MA7Cf,YAAkG,IAAD,IAAvEtG,KAAQc,EAA+D,EAA/DA,OAAQyF,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,aAAc3D,EAAwB,EAAxBA,SAAU4D,EAAc,EAAdA,SAsB/E,OACI,uBAAM7F,UAAWC,EAAO6F,SAAUxC,SArBb,SAAC4B,GAElBQ,EAAMd,SAASzD,OAAS,GACxBuE,EAAMK,eAAe5E,OAAS,GAC9B0E,EAASG,KAAKN,EAAMK,iBAEpB9D,GAAS,SAACgE,GAAD,4BACFA,GADE,CAEL,CACI1G,KAAMmG,EAAMd,SACZhE,QAAS8E,EAAMK,eAAelF,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAC5D8D,aAAa,EACbhD,MAAO,SAInBgE,EAAS,CAAEf,SAAU,GAAImB,eAAgB,KACzCb,EAAEC,kBAIF,UACI,uBACI5B,KAAK,OACLI,YAAY,OACZF,KAAK,WACLD,MAAOkC,EAAMd,SACb5E,UAAWC,EAAOwC,SAClBiB,SAAUkC,IAEd,uBACIrC,KAAK,OACLI,YAAY,IACZF,KAAK,iBACLD,MAAOkC,EAAMK,eACb/F,UAAWC,EAAOiG,eAClBxC,SAAUkC,IAEd,wBAAQ5F,UAAWC,EAAOkG,QAA1B,qBCKGC,EAvCI,SAAC,GAAoG,IAAD,IAAjGjH,KAAQE,EAAyF,EAAzFA,MAAO4C,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,aAAcsC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,WAAYrF,EAAkC,EAAlCA,gBAAiBkD,EAAiB,EAAjBA,SAE5FuD,EAAWQ,OAAO,0BAF2F,EAIzF/G,mBAAS,CAC/BsF,SAAU,GACVmB,eAAgB,KAN+F,mBAI5GL,EAJ4G,KAIrGC,EAJqG,KAyBnH,OACI,sBAAK3F,UAAWC,IAAOqG,iBAAvB,UAEI,cAAC,EAAD,CAAenH,KAAM,CAAEc,WAAQgC,WAAU7C,kBAAiBkD,cAE1D,sBAAKtC,UAAWC,IAAOsG,YAAvB,UACI,cAAC,EAAD,CAAiBpH,KAAM,CAAEc,WAAQgC,WAAU5C,QAAOmF,aAAYtC,eAAcuC,gBAC5E,cAAC,EAAD,CAAgBtF,KAAM,CAAEc,WAAQgC,WAAUyD,QAAOC,WAAUC,aAtBlD,SAACV,GAAO,IAAD,EACAA,EAAEI,OAAlB7B,EADgB,EAChBA,KAAMD,EADU,EACVA,MAEVmC,EADS,mBAATlC,EACS,SAAA+C,GAAS,kCACXA,GADW,kBAEb/C,EAAOoC,EAASG,KAAKxC,GAASA,EAAQgD,EAAU/C,MAG5C,SAAA+C,GAAS,kCACXA,GADW,kBAEb/C,EAAOD,OAYiEqC,qBC1B1EY,EAZC,WAAO,IAAD,EACcnH,mBAAS,IADvB,mBACXoH,EADW,KACDC,EADC,KAQlB,MAAO,CAACD,EAAUC,EALG,SAACzB,GAAO,IACjB1B,EAAU0B,EAAEI,OAAZ9B,MACRmD,EAAYnD,MC+DLoD,EA9DD,SAAC,GAAoD,IAAD,IAAjDzH,KAAQC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,MAAO4C,EAAiB,EAAjBA,SAAiB,EACtB3C,mBAAS,GADa,mBACvD4C,EADuD,KACzC2E,EADyC,OAGZJ,EAAQ,IAHI,mBAGvDtE,EAHuD,KAG7CE,EAH6C,KAGhCD,EAHgC,OAIpC9C,mBAAS,IAJ2B,mBAIvDqC,EAJuD,KAIhDW,EAJgD,KAgC9D,OACI,sBAAKtC,UAAWC,IAAO6G,UAAvB,UACI,cAAC,EAAD,CACI3H,KAAM,CACFE,QACA4C,WACAC,eACAsC,WAhBG,SAACU,GAChB,IAAM6B,EAAU7B,EAAEI,OAAO0B,WAAWhC,GAAGxB,MACvCqD,EAAgBE,IAeJtC,WAZG,SAAC/D,GAChBuB,EAAS5C,EAAM6D,QAAO,SAAC3D,GAAD,OAAUA,IAASF,EAAMqB,QAYnCtB,kBACAkD,cAGR,cAAC,EAAD,CACInD,KAAM,CACFE,QACA4C,WACAC,eACAC,WACAE,cACAD,mBACAT,QACAW,WACAC,QAjDA,SAAC2C,GACT/C,EAAShB,OAAS,GAClBmB,GAAS,SAAC2E,GAAD,4BAAmBA,GAAnB,CAA8B9E,OAE3CE,EAAY,IAEZ,IAAMc,EAAY,YAAO9D,GACzB8D,EAAajB,GAAb,2BACOiB,EAAajB,IADpB,IAEIP,MAAM,GAAD,mBAAMwB,EAAajB,GAAcP,OAAjC,CAAwCQ,MAEjDF,EAASkB,GACTc,aAAatE,QAAQ,QAASuH,KAAKC,UAAUhE,IAE7C+B,EAAEC,yB,iBCpBK,SAASiC,IAEpB,IACMC,EADWC,cACYC,SAHH,EAOAjI,mBACtB4H,KAAKM,MAAMvD,aAAawD,QAAQ,WAAa,CACzC,CACIlI,KAAM,iBACNqB,QAAS,KACT+D,aAAa,EACbhD,MAAO,CACH,mCACA,kBACA,cACA,YAEL,CACCpC,KAAM,OACNqB,QAAS,OACT+D,aAAa,EACbhD,MAAO,CACH,8BACA,YACA,0BAEL,CACCpC,KAAM,aACNqB,QAAS,OACT+D,aAAa,EACbhD,MAAO,CACH,kBACA,gBACA,mBACA,yBApCU,mBAOnBtC,EAPmB,KAOZ4C,EAPY,KAyCpByF,EAAUrI,EAAMsI,QAAO,SAACC,EAAOlI,GAAR,OAAiBkI,EAAQC,WAAWnI,EAAKkB,QAAQC,QAAQ,IAAK,QAAO,GAC5FzB,EAAkBsI,EAAQI,QAAQJ,IAAY/G,SAAS+G,GAAW,EAAI,GAe5E,OAZAlF,qBAAU,WACN,IAAMuF,EAAW1I,EAAMwD,KAAI,SAAAtD,GAKvB,OAJa,2BACNA,GADM,IAETqB,QAASrB,EAAKqB,QAAQC,QAAQ,IAAK,UAI3CoD,aAAatE,QAAQ,QAASuH,KAAKC,UAAUY,MAC9C,CAAC1I,IAIA,gCACI,sBAAKW,UAAWC,IAAO+H,IAAvB,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,wBACIjI,UAAWC,IAAOK,QAClBwB,MAAO,CAAEoG,eAAgC,MAAhBb,EAAsB,YAAc,QAFjE,oBAOJ,cAAC,IAAD,CAAMY,GAAG,SAAT,SACI,wBACIjI,UAAWC,IAAOkI,SAClBrG,MAAO,CAAEoG,eAAgC,WAAhBb,EAA2B,YAAc,QAFtE,wBASR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMlJ,KAAM,CAAEC,kBAAiBC,aAEnC,cAAC,IAAD,CAAO+I,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,EAAD,CAAOlJ,KAAM,CAAEC,kBAAiBC,QAAO4C,sB,MCpF3DqG,IAASC,OACL,cAAC,IAAD,UACI,cAACnB,EAAD,MAEJoB,SAASC,eAAe,U,kBCV5BzJ,EAAOC,QAAU,CAAC,gBAAkB,8BAA8B,QAAU,sBAAsB,UAAY,wBAAwB,QAAU,sBAAsB,QAAU,sBAAsB,QAAU,sBAAsB,SAAW,yB,kBCAjPD,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,YAAc,+BAA+B,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,iC","file":"static/js/main.00ad5ae3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesMainContext\":\"RatesTiers_ratesMainContext__3NadP\",\"mainContent\":\"RatesTiers_mainContent__3Dkq0\",\"dataBox\":\"RatesTiers_dataBox__19cii\",\"tierName\":\"RatesTiers_tierName__3av3W\",\"percentage\":\"RatesTiers_percentage__Ym_eK\",\"tierText\":\"RatesTiers_tierText__1zKYq\",\"tierForm\":\"RatesTiers_tierForm__3Fzt_\",\"tierPercentage\":\"RatesTiers_tierPercentage__2E43o\",\"tierAdd\":\"RatesTiers_tierAdd__1ipYI\",\"tierItem\":\"RatesTiers_tierItem__2-wmx\",\"removeIcon\":\"RatesTiers_removeIcon__3OWV8\",\"percentageUpdateInput\":\"RatesTiers_percentageUpdateInput__17B0z\",\"upperData\":\"RatesTiers_upperData__3XruM\",\"removeAll\":\"RatesTiers_removeAll__2rOHr\",\"reset\":\"RatesTiers_reset__3oOTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__3TRKK\",\"spinBtn\":\"App_spinBtn__mTZZk\",\"ratesBtn\":\"App_ratesBtn__3Wbrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Rates_container__Lt2yP\"};","import React, { useState } from \"react\";\r\nimport \"animate.css\";\r\nimport styles from \"./Spin.module.css\";\r\n\r\nconst Spin = ({ data: { totalPercentage, tiers } }) => {\r\n    const [rarity, setRarity] = useState({ tier: \"RARITY\" });\r\n    const [item, setItem] = useState(\"ITEM\");\r\n\r\n    const [thingSpinning, setThingSpinning] = useState(null);\r\n    const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n    const pickItem = () => {\r\n        setIsSpinning(true);\r\n\r\n        const allTiers = [];\r\n        tiers.forEach((tier) => {\r\n            // tenth of a percent accuracy (eg. 32.6% will have 326 out of 1000 entries in the array)\r\n            for (let i = 0; i < parseInt(tier.percent.replace(',', '.') * 10); i++) {\r\n                allTiers.push(tier);\r\n            }\r\n        });\r\n\r\n        const randomTier =\r\n            allTiers[Math.floor(Math.random() * allTiers.length)];\r\n\r\n        setThingSpinning(\"rarity\");\r\n\r\n        let raritySpinnerCount = 0;\r\n        const raritySpinnerID = setInterval(() => {\r\n            if (raritySpinnerCount >= 9) {\r\n                setRarity(randomTier);\r\n                setThingSpinning(null);\r\n                clearInterval(raritySpinnerID);\r\n            } else {\r\n                setRarity(\r\n                    allTiers[Math.floor(Math.random() * allTiers.length)]\r\n                );\r\n                raritySpinnerCount++;\r\n            }\r\n        }, 200);\r\n\r\n        setTimeout(() => {\r\n            setThingSpinning(\"item\");\r\n\r\n            let itemSpinnerCount = 0;\r\n            const itemSpinnerID = setInterval(() => {\r\n                if (itemSpinnerCount >= 9) {\r\n                    setThingSpinning(null);\r\n                    setIsSpinning(false);\r\n                    clearInterval(itemSpinnerID);\r\n                } else {\r\n                    setItem(\r\n                        randomTier.items[\r\n                        Math.floor(Math.random() * randomTier.items.length)\r\n                        ]\r\n                    );\r\n                    itemSpinnerCount++;\r\n                }\r\n            }, 200);\r\n        }, 2000)\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.spinMainContext}>\r\n                <div className={styles.dataBox}>\r\n                    <span\r\n                        className={\r\n                            thingSpinning === \"rarity\" ? styles.spinner : \"\"\r\n                        }\r\n                    >\r\n                        {rarity.tier}\r\n                    </span>\r\n                </div>\r\n                <div className={styles.dataBox}>\r\n                    <span\r\n                        className={\r\n                            thingSpinning === \"item\" ? styles.spinner : \"\"\r\n                        }\r\n                    >\r\n                        {item}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.otherData}>\r\n                <button\r\n                    className={styles.spinBtn}\r\n                    onClick={pickItem}\r\n                    disabled={(totalPercentage !== \"100\" && totalPercentage !== \"100.00\") || isSpinning}\r\n                >\r\n                    <span className=\"animate__animated animate__zoomIn\">\r\n                        SPIN!\r\n                    </span>\r\n                </button>\r\n                <div\r\n                    className={styles.outcome}\r\n                    style={{\r\n                        color: (totalPercentage === \"100\" || totalPercentage === \"100.00\") ? \"green\" : \"red\",\r\n                    }}\r\n                >\r\n                    <span className=\"animate__animated animate__zoomIn\">\r\n                        The outcome is at {totalPercentage}%!\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Spin;\r\n","import React, { useEffect } from \"react\";\r\nimport styles from \"./RatesData.module.css\";\r\n\r\nconst RatesData = ({\r\n    data: {\r\n        tiers,\r\n        setTiers,\r\n        selectedTier,\r\n        itemData,\r\n        setItemData,\r\n        handleItemChange,\r\n        items,\r\n        setItems,\r\n        itemAdd,\r\n    },\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const tierItem = tiers[selectedTier];\r\n        if (tierItem !== undefined) {\r\n            setItems(tierItem.items);\r\n        }\r\n    }, [tiers, selectedTier, setItems]);\r\n\r\n    const removeDataItem = (index) => {\r\n        const newItems = items.filter((item) => items[index] !== item)\r\n        setItems(newItems);\r\n        let updatedTiers = [...tiers];\r\n        updatedTiers[selectedTier] = {\r\n            ...updatedTiers[selectedTier],\r\n            items: newItems,\r\n        };\r\n        setTiers(updatedTiers)\r\n        // localStorage.setItem(\"tiers\", JSON.stringify(updatedTiers));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.rightContainer}>\r\n            <div className={styles.rightData}>\r\n                <ul className={styles.items}>\r\n                    {items.map((item, index) => (\r\n                        <li key={index} style={{ display: \"flex\" }}>\r\n                            <span\r\n                                className={styles.removeIcon}\r\n                                onClick={() => removeDataItem(index)}\r\n                            >\r\n                                (X)\r\n                            </span>\r\n                            {item}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.rightInputs}>\r\n                <form onSubmit={itemAdd}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={itemData}\r\n                        name=\"item\"\r\n                        onChange={handleItemChange}\r\n                        placeholder=\"enter an item\"\r\n                    />\r\n                    <button>ADD</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RatesData;\r\n","import React from 'react';\r\n\r\nfunction RatesTiersTop({ data: { styles, totalPercentage, setTiers, setItems } }) {\r\n\r\n    const removeAll = () => {\r\n        setTiers([]);\r\n        setItems([]);\r\n    }\r\n\r\n    const reset = () => {\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.upperData}>\r\n            <div style={{ color: (totalPercentage === \"100\" || totalPercentage === \"100.00\") ? \"green\" : \"red\", padding: \"10px\" }}>\r\n                Total: {!isNaN(totalPercentage) ? totalPercentage : 0}%\r\n            </div>\r\n            <div className={styles.reset}>\r\n                <span onClick={reset}>(Reset)</span>\r\n            </div>\r\n            <div className={styles.removeAll}>\r\n                <span onClick={removeAll}>(Remove All)</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesTiersTop;\r\n","import React from 'react';\r\n\r\nfunction RatesTiersCards({ data: { tiers, styles, selectTier, selectedTier, removeTier, setTiers } }) {\r\n\r\n    const handlePercentageUpdate = ({ value }, index) => {\r\n        const updatedTiers = [...tiers];\r\n        let percentageValue = value;\r\n\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            percent: percentageValue.replace(',', '.')\r\n        }\r\n\r\n        setTiers(updatedTiers);\r\n    }\r\n\r\n    const changePercentage = (index) => {\r\n        const updatedTiers = [...tiers]\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            perSelected: !updatedTiers[index].perSelected\r\n        }\r\n\r\n        setTiers(updatedTiers)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {tiers.map((tierData, index) => (\r\n                <div key={index} className={styles.dataBox}>\r\n                    <span className={styles.tierName}>\r\n                        <span\r\n                            className={styles.tierText}\r\n                            onClick={selectTier}\r\n                            style={{ fontWeight: index === parseInt(selectedTier) ? \"bolder\" : \"normal\" }}\r\n                            id={index}\r\n                        >\r\n                            {tiers[index].tier}\r\n                        </span>\r\n                        <span className={styles.percentage}>\r\n                            <span onClick={() => changePercentage(index)}>\r\n                                {tierData.perSelected ?\r\n                                    <form onSubmit={(e) => {\r\n                                        changePercentage(index);\r\n                                        e.preventDefault();\r\n                                    }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={tierData.percent}\r\n                                            onChange={(e) => handlePercentageUpdate(e.target, index)}\r\n                                            autoFocus={true}\r\n                                            className={styles.percentageUpdateInput}\r\n                                        />\r\n                                    </form> :\r\n                                    tierData.percent}%\r\n                        </span>\r\n                            <span className={styles.removeIcon} onClick={() => removeTier(index)}>(X)</span>\r\n                        </span>\r\n\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RatesTiersCards;\r\n","import React from \"react\";\r\n\r\nfunction RatesTiersForm( {data: { styles, state, setState, handleChange, setTiers, numRegex } }) {\r\n\r\n    const handleTierSubmit = (e) => {\r\n        if (\r\n            state.tierData.length > 0 &&\r\n            state.percentageData.length > 0 &&\r\n            numRegex.test(state.percentageData)\r\n        ) {\r\n            setTiers((prevTiers) => [\r\n                ...prevTiers,\r\n                {\r\n                    tier: state.tierData,\r\n                    percent: state.percentageData.replace(\"%\", \"\").replace(',', '.'),\r\n                    perSelected: false,\r\n                    items: [],\r\n                },\r\n            ]);\r\n        }\r\n        setState({ tierData: \"\", percentageData: \"\" });\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <form className={styles.tierForm} onSubmit={handleTierSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"tier\"\r\n                name=\"tierData\"\r\n                value={state.tierData}\r\n                className={styles.tierItem}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"%\"\r\n                name=\"percentageData\"\r\n                value={state.percentageData}\r\n                className={styles.tierPercentage}\r\n                onChange={handleChange}\r\n            />\r\n            <button className={styles.tierAdd}>ADD</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RatesTiersForm;\r\n","import React, { useState } from 'react'\r\n\r\nimport styles from \"./RatesTiers.module.css\"\r\n\r\nimport RatesTiersTop from \"./RatesTiersTop\"\r\nimport RatesTiersCards from \"./RatesTiersCards\"\r\nimport RatesTiersForm from \"./RatesTiersForm\"\r\n\r\nconst RatesTiers = ({ data: { tiers, setTiers, selectedTier, selectTier, removeTier, totalPercentage, setItems } }) => {\r\n\r\n    const numRegex = RegExp(\"^[0-9]?(,|\\\\.)?[0-9]*$\");\r\n\r\n    const [state, setState] = useState({\r\n        tierData: \"\",\r\n        percentageData: \"\"\r\n    });\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (name === \"percentageData\") {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                [name]: numRegex.test(value) ? value : prevState[name]\r\n            }))\r\n        } else {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.ratesMainContext}>\r\n\r\n            <RatesTiersTop data={{ styles, setTiers, totalPercentage, setItems }} />\r\n\r\n            <div className={styles.mainContent}>\r\n                <RatesTiersCards data={{ styles, setTiers, tiers, selectTier, selectedTier, removeTier }} />\r\n                <RatesTiersForm data={{ styles, setTiers, state, setState, handleChange, numRegex }} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesTiers","import { useState } from \"react\";\r\n\r\nconst useForm = () => {\r\n    const [formData, setFormData] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { value } = e.target;\r\n        setFormData(value);\r\n    }\r\n\r\n    return [formData, setFormData, handleChange];\r\n\r\n}\r\n\r\nexport default useForm;","import React, { useState } from \"react\";\r\nimport styles from \"./Rates.module.css\";\r\n\r\nimport RatesData from \"./RatesData\";\r\nimport RatesTiers from \"./RatesTiers\";\r\n\r\nimport useForm from \"./hooks/useForm\";\r\n\r\nconst Rates = ({ data: { totalPercentage, tiers, setTiers } }) => {\r\n    const [selectedTier, setSelectedTier] = useState(0);\r\n\r\n    const [itemData, setItemData, handleItemChange] = useForm(\"\");\r\n    const [items, setItems] = useState([]);\r\n\r\n    const itemAdd = (e) => {\r\n        if (itemData.length > 0) {\r\n            setItems((prevItems) => [...prevItems, itemData]);\r\n        }\r\n        setItemData(\"\");\r\n\r\n        const updatedTiers = [...tiers];\r\n        updatedTiers[selectedTier] = {\r\n            ...updatedTiers[selectedTier],\r\n            items: [...updatedTiers[selectedTier].items, itemData],\r\n        };\r\n        setTiers(updatedTiers);\r\n        localStorage.setItem(\"tiers\", JSON.stringify(updatedTiers));\r\n\r\n        e.preventDefault();\r\n    };\r\n\r\n    const selectTier = (e) => {\r\n        const selTier = e.target.attributes.id.value;\r\n        setSelectedTier(selTier);\r\n    };\r\n\r\n    const removeTier = (i) => {\r\n        setTiers(tiers.filter((tier) => tier !== tiers[i]));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <RatesTiers\r\n                data={{\r\n                    tiers,\r\n                    setTiers,\r\n                    selectedTier,\r\n                    selectTier,\r\n                    removeTier,\r\n                    totalPercentage,\r\n                    setItems\r\n                }}\r\n            />\r\n            <RatesData\r\n                data={{\r\n                    tiers,\r\n                    setTiers,\r\n                    selectedTier,\r\n                    itemData,\r\n                    setItemData,\r\n                    handleItemChange,\r\n                    items,\r\n                    setItems,\r\n                    itemAdd,\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rates;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Spin from \"./Spin\"\r\nimport Rates from \"./Rates\"\r\n\r\nimport styles from \"./App.module.css\"\r\n\r\nexport default function App() {\r\n\r\n    const location = useLocation();\r\n    const currentPath = location.pathname;\r\n\r\n\r\n\r\n    const [tiers, setTiers] = useState(\r\n        JSON.parse(localStorage.getItem(\"tiers\")) || [\r\n            {\r\n                tier: \"Smaller Prizes\",\r\n                percent: \"60\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"1 month of Discord Nitro Classic\",\r\n                    \"common item #82\",\r\n                    \"lorem ispum\",\r\n                    \"example\"\r\n                ]\r\n            }, {\r\n                tier: \"Rare\",\r\n                percent: \"24.6\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"3 months of Spotify Premium\",\r\n                    \"rare item\",\r\n                    \"something that's rare\"\r\n                ]\r\n            }, {\r\n                tier: \"Gift Cards\",\r\n                percent: \"15.4\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"$50 Amazon Card\",\r\n                    \"$40 Visa Card\",\r\n                    \"$60 Steam Credit\",\r\n                    \"$25 Starbucks Card\"\r\n                ]\r\n            }\r\n        ]);\r\n        \r\n    const tPFloat = tiers.reduce((total, item) => total + parseFloat(item.percent.replace(',', '.')), 0);\r\n    const totalPercentage = tPFloat.toFixed(tPFloat === parseInt(tPFloat) ? 0 : 2);\r\n\r\n\r\n    useEffect(() => {\r\n        const newTiers = tiers.map(tier => {\r\n            const newTier = {\r\n                ...tier,\r\n                percent: tier.percent.replace(',', '.')\r\n            }\r\n            return newTier;\r\n        });\r\n        localStorage.setItem(\"tiers\", JSON.stringify(newTiers));\r\n    }, [tiers])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.nav}>\r\n                <Link to=\"/\">\r\n                    <button\r\n                        className={styles.spinBtn}\r\n                        style={{ textDecoration: currentPath === \"/\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Spin\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/rates\">\r\n                    <button\r\n                        className={styles.ratesBtn}\r\n                        style={{ textDecoration: currentPath === \"/rates\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Rates\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Spin data={{ totalPercentage, tiers }} />\r\n                </Route>\r\n                <Route exact path=\"/rates\">\r\n                    <Rates data={{ totalPercentage, tiers, setTiers }} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport App from \"./App\";\r\nimport \"./index.module.css\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinMainContext\":\"Spin_spinMainContext__1DUjz\",\"dataBox\":\"Spin_dataBox__1mqVw\",\"otherData\":\"Spin_otherData__1CSZG\",\"spinBtn\":\"Spin_spinBtn__2jig2\",\"outcome\":\"Spin_outcome__14xHn\",\"spinner\":\"Spin_spinner__3yJlH\",\"spinText\":\"Spin_spinText__3zQU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightContainer\":\"RatesData_rightContainer__W_bTQ\",\"mainContent\":\"RatesData_mainContent__1G3OE\",\"rightData\":\"RatesData_rightData__2KuQz\",\"rightInputs\":\"RatesData_rightInputs__3mMUF\",\"removeIcon\":\"RatesData_removeIcon__2eCNz\"};"],"sourceRoot":""}