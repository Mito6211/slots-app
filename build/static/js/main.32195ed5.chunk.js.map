{"version":3,"sources":["RatesData.module.css","App.module.css","Rates.module.css","Spin.js","hooks/useForm.js","RatesData.js","RatesTiers.js","Rates.js","App.js","index.js","RatesTiers.module.css","Spin.module.css"],"names":["module","exports","Spin","data","totalPercentage","tiers","useState","tier","rarity","setRarity","item","setItem","className","styles","spinMainContext","dataBox","otherData","spinBtn","onClick","allTiers","forEach","i","parseInt","percent","push","randomTier","Math","floor","random","length","console","log","items","disabled","outcome","style","color","useForm","formData","setFormData","e","value","target","RatesData","selectedTier","setItems","itemData","setItemData","handleItemChange","useEffect","tierItem","undefined","rightContainer","rightData","map","index","rightInputs","onSubmit","prevItems","preventDefault","type","name","onChange","placeholder","RatesTiers","setTiers","selectTier","removeTier","tierData","setTierData","handleTierChange","percentageData","setPercentageData","handlePercentageChange","changePercentage","updatedTiers","perSelected","ratesMainContext","padding","isNaN","mainContent","tierName","tierText","fontWeight","id","percentage","keystroke","percentValue","handlePercentageUpdate","autoFocus","percentageUpdateInput","removeIcon","tierForm","prevTiers","replace","tierPercentage","tierAdd","Rates","setSelectedTier","container","attributes","filter","App","currentPath","useLocation","pathname","reduce","total","nav","to","textDecoration","ratesBtn","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32195ed5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightContainer\":\"RatesData_rightContainer__W_bTQ\",\"mainContent\":\"RatesData_mainContent__1G3OE\",\"rightData\":\"RatesData_rightData__2KuQz\",\"rightInputs\":\"RatesData_rightInputs__3mMUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"App_nav__3TRKK\",\"spinBtn\":\"App_spinBtn__mTZZk\",\"ratesBtn\":\"App_ratesBtn__3Wbrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Rates_container__Lt2yP\"};","import React, { useState } from 'react'\r\n\r\nimport styles from \"./Spin.module.css\"\r\n\r\nconst Spin = ({ data: { totalPercentage, tiers } }) => {\r\n\r\n    const [rarity, setRarity] = useState({tier: \"RARITY\"})\r\n    const [item, setItem] = useState(\"ITEM\")\r\n\r\n\r\n    const pickItem = () => {\r\n        const allTiers = [];\r\n        tiers.forEach(tier => {\r\n            for (let i = 0; i < parseInt(tier.percent); i++) {\r\n                allTiers.push(tier);\r\n            }\r\n        })\r\n\r\n        const randomTier = allTiers[Math.floor(Math.random()*allTiers.length)];\r\n\r\n        setRarity(randomTier);\r\n        console.log(randomTier);\r\n        // there will be an animation here\r\n        // then wait for a few seconds\r\n\r\n        setItem(randomTier.items[Math.floor(Math.random()*randomTier.items.length)])\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.spinMainContext}>\r\n                <div className={styles.dataBox}><span>{rarity.tier}</span></div>\r\n                <div className={styles.dataBox}><span>{item}</span></div>\r\n            </div>\r\n            <div className={styles.otherData}>\r\n                <button className={styles.spinBtn} onClick={pickItem} disabled={totalPercentage !== 100}>SPIN!</button>\r\n                <div className={styles.outcome} style={{ color: totalPercentage === 100 ? \"green\" : \"red\" }}>\r\n                    The outcome is at {totalPercentage}%!\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spin;","import { useState } from \"react\";\r\n\r\nconst useForm = () => {\r\n    const [formData, setFormData] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { value } = e.target;\r\n        setFormData(value);\r\n    }\r\n\r\n    return [formData, setFormData, handleChange];\r\n\r\n}\r\n\r\nexport default useForm;","import React, { useState, useEffect } from 'react';\r\nimport styles from './RatesData.module.css';\r\nimport useForm from './hooks/useForm';\r\n\r\nconst RatesData = ({ data: { tiers, selectedTier } }) => {\r\n    const [items, setItems] = useState([]);\r\n    const [itemData, setItemData, handleItemChange] = useForm('');\r\n\r\n    const itemAdd = (e) => {\r\n        if (itemData.length > 0) {\r\n            setItems(prevItems => ([\r\n                ...prevItems,\r\n                itemData\r\n            ]));\r\n        }\r\n        setItemData('');\r\n        e.preventDefault();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const tierItem = tiers[selectedTier];\r\n        if (tierItem !== undefined) {\r\n            setItems(tierItem.items)\r\n        }\r\n    }, [tiers, selectedTier])\r\n\r\n    return (\r\n        <div className={styles.rightContainer}>\r\n            <div className={styles.rightData}>\r\n                <ul className={styles.items}>\r\n                    {items.map((item, index) => <li key={index}>{item}</li>)}\r\n                </ul>\r\n            </div>\r\n            <div className={styles.rightInputs}>\r\n                <form onSubmit={itemAdd}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={itemData}\r\n                        name=\"item\"\r\n                        onChange={handleItemChange}\r\n                        placeholder=\"enter an item\"\r\n                    />\r\n                    <button>ADD</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesData;","import React from 'react'\r\n\r\nimport useForm from './hooks/useForm'\r\nimport styles from \"./RatesTiers.module.css\"\r\n\r\nconst RatesTiers = ({ data: { tiers, setTiers, selectedTier, selectTier, removeTier, totalPercentage } }) => {\r\n\r\n    const [tierData, setTierData, handleTierChange] = useForm('');\r\n    const [percentageData, setPercentageData, handlePercentageChange] = useForm('');\r\n\r\n\r\n\r\n    const handleTierSubmit = (e) => {\r\n        if (tierData.length > 0 && percentageData.length > 0) {\r\n            setTiers(prevTiers => ([\r\n                ...prevTiers,\r\n                {\r\n                    tier: tierData,\r\n                    percent: percentageData.replace('%', ''),\r\n                    perSelected: false,\r\n                    items: []\r\n                }\r\n            ]));\r\n        }\r\n        setTierData('');\r\n        setPercentageData('');\r\n        e.preventDefault();\r\n    }\r\n\r\n    const changePercentage = (index) => {\r\n        const updatedTiers = [...tiers]\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            perSelected: !updatedTiers[index].perSelected\r\n        }\r\n\r\n        setTiers(updatedTiers)\r\n    }\r\n\r\n    const handlePercentageUpdate = ({ value }, index) => {\r\n        const updatedTiers = [...tiers];\r\n        const keystroke = value[value.length - 1];\r\n        let percentValue = (isNaN(parseInt(value)) && keystroke !== '.') ? \"\" : value;\r\n\r\n        if (keystroke === '.' && parseInt(tiers[index].percent) % 1 !== 0) {\r\n            percentValue = value;\r\n        }\r\n\r\n        updatedTiers[index] = {\r\n            ...updatedTiers[index],\r\n            percent: percentValue\r\n        }\r\n\r\n        setTiers(updatedTiers);\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.ratesMainContext}>\r\n            <div style={{ color: totalPercentage === 100 ? \"green\" : \"red\", padding: \"10px\"}}>\r\n                Total: {!isNaN(totalPercentage) ? totalPercentage : 0}%\r\n            </div>\r\n            <div className={styles.mainContent}>\r\n\r\n                {tiers.map((tierData, index) => (\r\n                    <div key={index} className={styles.dataBox}>\r\n                        <span className={styles.tierName}>\r\n                            <span\r\n                                className={styles.tierText}\r\n                                onClick={selectTier}\r\n                                style={{ fontWeight: index === parseInt(selectedTier) ? \"bolder\" : \"normal\" }}\r\n                                id={index}\r\n                            >\r\n                                {tiers[index].tier}\r\n                            </span>\r\n                            <span className={styles.percentage}>\r\n                                <span onClick={() => changePercentage(index)}>\r\n                                    {tierData.perSelected ?\r\n                                        <form onSubmit={(e) => {\r\n                                            changePercentage(index);\r\n                                            e.preventDefault();\r\n                                        }}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={tierData.percent}\r\n                                                onChange={(e) => handlePercentageUpdate(e.target, index)}\r\n                                                autoFocus={true}\r\n                                                className={styles.percentageUpdateInput}\r\n                                            />\r\n                                        </form> :\r\n                                        tierData.percent}%\r\n                                </span>\r\n                                <span className={styles.removeIcon} onClick={() => removeTier(index)}>(X)</span>\r\n                            </span>\r\n\r\n                        </span>\r\n                    </div>\r\n                ))}\r\n\r\n                <form className={styles.tierForm} onSubmit={handleTierSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"tier\"\r\n                        value={tierData}\r\n                        className={styles.tierItem}\r\n                        onChange={handleTierChange}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"%\"\r\n                        value={percentageData}\r\n                        className={styles.tierPercentage}\r\n                        onChange={handlePercentageChange}\r\n                    />\r\n                    <button className={styles.tierAdd}>ADD</button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RatesTiers","import React, { useState } from 'react';\r\nimport styles from \"./Rates.module.css\";\r\n\r\nimport RatesData from \"./RatesData\";\r\nimport RatesTiers from \"./RatesTiers\";\r\n\r\nconst Rates = ({ data: { totalPercentage, tiers, setTiers } }) => {\r\n\r\n    const [selectedTier, setSelectedTier] = useState(0);\r\n\r\n    const selectTier = (e) => {\r\n        setSelectedTier(e.target.attributes.id.value);\r\n    }\r\n\r\n    const removeTier = (i) => {\r\n        setTiers(tiers.filter(tier => tier !== tiers[i]))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <RatesTiers data={{ tiers, setTiers, selectedTier, selectTier, removeTier, totalPercentage }} />\r\n            <RatesData data={{ tiers, selectedTier }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rates;\r\n","import React, { useState } from 'react'\r\nimport { Link, Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Spin from \"./Spin\"\r\nimport Rates from \"./Rates\"\r\n\r\nimport styles from \"./App.module.css\"\r\n\r\nexport default function App() {\r\n\r\n    const location = useLocation();\r\n    const currentPath = location.pathname;\r\n\r\n\r\n\r\n    const [tiers, setTiers] = useState(\r\n        [\r\n            {\r\n                tier: \"Smaller Prizes\",\r\n                percent: \"80\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"1 month of Discord Nitro Classic\",\r\n                    \"common item #82\",\r\n                    \"lorem ispum\",\r\n                    \"example\"\r\n                ]\r\n            }, {\r\n                tier: \"Rare\",\r\n                percent: \"15\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"3 months of Spotify Premium\",\r\n                    \"rare item\",\r\n                    \"something that's rare\"\r\n                ]\r\n            }, {\r\n                tier: \"Gift Cards\",\r\n                percent: \"5\",\r\n                perSelected: false,\r\n                items: [\r\n                    \"$50 Amazon Card\",\r\n                    \"$40 Visa Card\",\r\n                    \"$60 Steam Credit\",\r\n                    \"$25 Starbucks Card\"\r\n                ]\r\n            }\r\n        ]);\r\n\r\n\r\n    const totalPercentage = tiers.reduce((total, item) => total + parseInt(item.percent), 0)\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.nav}>\r\n                <Link to=\"/\">\r\n                    <button\r\n                        className={styles.spinBtn}\r\n                        style={{ textDecoration: currentPath === \"/\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Spin\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/rates\">\r\n                    <button\r\n                        className={styles.ratesBtn}\r\n                        style={{ textDecoration: currentPath === \"/rates\" ? \"underline\" : \"none\" }}\r\n                    >\r\n                        Rates\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Spin data={{ totalPercentage, tiers }} />\r\n                </Route>\r\n                <Route exact path=\"/rates\">\r\n                    <Rates data={{ totalPercentage, tiers, setTiers }} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nimport App from \"./App\";\r\nimport \"./index.module.css\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ratesMainContext\":\"RatesTiers_ratesMainContext__3NadP\",\"mainContent\":\"RatesTiers_mainContent__3Dkq0\",\"dataBox\":\"RatesTiers_dataBox__19cii\",\"tierName\":\"RatesTiers_tierName__3av3W\",\"percentage\":\"RatesTiers_percentage__Ym_eK\",\"tierText\":\"RatesTiers_tierText__1zKYq\",\"tierForm\":\"RatesTiers_tierForm__3Fzt_\",\"tierPercentage\":\"RatesTiers_tierPercentage__2E43o\",\"tierAdd\":\"RatesTiers_tierAdd__1ipYI\",\"tierItem\":\"RatesTiers_tierItem__2-wmx\",\"removeIcon\":\"RatesTiers_removeIcon__3OWV8\",\"percentageUpdateInput\":\"RatesTiers_percentageUpdateInput__17B0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinMainContext\":\"Spin_spinMainContext__1DUjz\",\"dataBox\":\"Spin_dataBox__1mqVw\",\"otherData\":\"Spin_otherData__1CSZG\",\"spinBtn\":\"Spin_spinBtn__2jig2\",\"outcome\":\"Spin_outcome__14xHn\"};"],"sourceRoot":""}